/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/schedules": {
    /**
     * Get All Schedules 
     * @description `regular match` `bankaraMatch Open` `bankaraMatch Challenge` `Salmon Run` `X Battle`のスケジュールを返します。
     */
    get: operations["get-schedules"];
  };
  "/schedules/bankara": {
    /**
     * Get Bankara Open/Challenge Schedules 
     * @description バンカラマッチのScheduleを取得します。
     */
    get: operations["get-schedules-bankara"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Schedule: {
      startTime?: string;
      endTime?: string;
      rule?: string;
      stages?: ({
          id?: number;
          name?: string;
        })[];
    };
    SalmonRunSchedule: {
      startTime?: string;
      endTime?: string;
      stage?: string;
      weapons?: (string)[];
    };
  };
  responses: {
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  "get-schedules": {
    /**
     * Get All Schedules 
     * @description `regular match` `bankaraMatch Open` `bankaraMatch Challenge` `Salmon Run` `X Battle`のスケジュールを返します。
     */
    responses: {
      200: {
        content: {
          "application/json": {
            bankaraChallengeSchedules?: (components["schemas"]["Schedule"])[];
            bankaraOpenSchedules?: (components["schemas"]["Schedule"])[];
            regularSchedules?: (components["schemas"]["Schedule"])[];
            salmonRunSchedules?: (components["schemas"]["SalmonRunSchedule"])[];
            xSchedules?: (components["schemas"]["Schedule"])[];
          };
        };
      };
    };
  };
  "get-schedules-bankara": {
    /**
     * Get Bankara Open/Challenge Schedules 
     * @description バンカラマッチのScheduleを取得します。
     */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
}
